using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Mail;
using System.Web;
using System.Web.Security;

namespace Mvc_DooarsBangla.Models
{
    public class AdminDAL
    {
        SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Constr"].ToString());
        public string addAdmin(AdminModel admin)
        {
            try
            {


                SqlCommand com_addAdmin = new SqlCommand("insert Admins values(@name,@mbl,@email,'Active','AutoGenerated')", con);

                com_addAdmin.Parameters.AddWithValue("@name", admin.adminName);
                com_addAdmin.Parameters.AddWithValue("@mbl", admin.mobileNo);
                com_addAdmin.Parameters.AddWithValue("@email", admin.adminEmailID);
                


                con.Open();
                com_addAdmin.ExecuteNonQuery();

                SqlCommand com_getAdminID = new SqlCommand("select @@identity", con);
                admin.adminID = Convert.ToInt32(com_getAdminID.ExecuteScalar());

                string auto_generatedPassword = System.Web.Security.Membership.GeneratePassword(8, 3).ToUpper();

                MembershipCreateStatus status;
                Membership.CreateUser(admin.adminID.ToString(), auto_generatedPassword, "x@x.x", "abc", "abc", true, out status);

                if (status == MembershipCreateStatus.Success)
                {
                    Roles.AddUserToRole(admin.adminID.ToString(), "Admin");
                    //con.Close();


                    return admin.adminID+ " " +auto_generatedPassword;
                }
                else
                {
                    //con.Close();
                    return null;
                }
            }
            finally
            {
                con.Close();
            }


        }

        public bool addMarqueeNews(MarqueeModel model)
        {
            try
            {
                SqlCommand com_addMarquee = new SqlCommand("insert MarqueeNews values(@desc,'Visible')", con);
                com_addMarquee.Parameters.AddWithValue("@desc", model.MarqueeDescription);
                con.Open();
                int c = com_addMarquee.ExecuteNonQuery();
                //con.Close();

                if (c == 1)
                    return true;
                else
                    return false;
            }
            finally
            {
                con.Close();
            }
        }



        public List<MarqueeModel> getAllMarqueeNews()
        {
            try
            { 
            SqlCommand com_getAllMarquee = new SqlCommand("select * from MarqueeNews order by MarqueeNewsID desc", con);
            con.Open();
            SqlDataReader dr = com_getAllMarquee.ExecuteReader();
            List<MarqueeModel> lst_marquee = new List<MarqueeModel>();

            while(dr.Read())
            {
                MarqueeModel model = new MarqueeModel();
                model.MarqueeNewsID = dr.GetInt32(0);
                model.MarqueeDescription = dr.GetString(1);
                model.MarqueeStatus = dr.GetString(2);
                if(model.MarqueeNewsID!=1000)
                lst_marquee.Add(model);
            }
          //  con.Close();
            return lst_marquee;
            }
            finally
            {
                con.Close();
            }
        }



        public bool makeMarqueeInvisible(int marqueeID)
        {
            try
            {
                SqlCommand com_inv = new SqlCommand("update MarqueeNews set MarqueeStatus='Invisible' where MarqueeNewsID=@mid", con);
                com_inv.Parameters.AddWithValue("@mid", marqueeID);
                con.Open();
                int count = com_inv.ExecuteNonQuery();
                //con.Close();

                if (count == 1)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            finally
            {
                con.Close();
            }
        }



        public bool makeMarqueeVisible(int marqueeID)
        {
            try
            {
            SqlCommand com_vis = new SqlCommand("update MarqueeNews set MarqueeStatus='Visible' where MarqueeNewsID=@mid", con);
            com_vis.Parameters.AddWithValue("@mid", marqueeID);
            con.Open();
            int count = com_vis.ExecuteNonQuery();
            //con.Close();

            if (count == 1)
            {
                return true;
            }
            else
            {
                return false;
            }
            }
            finally
            {
                con.Close();
            }
        }


        ////////////////update password////////////////////////
        public bool updatePassword(int adminID, ChangePasswordAdminModel c)
        {
            try
            {
                con.Open();
                MembershipUser user = Membership.GetUser(adminID.ToString());
                if (user.ChangePassword(c.oldPassword, c.newPassword))
                {
                    // user.ChangePasswordQuestionAndAnswer(c.newPassword, c.securityQuestion, c.securityAnswer);

                    SqlCommand com_updatePasswordStatus = new SqlCommand("update Admins set passwordStatus='Updated' where adminID=@aid", con);
                    com_updatePasswordStatus.Parameters.AddWithValue("@aid", adminID);
                    com_updatePasswordStatus.ExecuteNonQuery();
                    //  con.Close();


                    return true;
                }
                else
                {
                    return false;
                }
            }
            finally
            {
                con.Close();
            }
        }



        public AdminModel getAdminProfile(int adminID)
        {
            try
            {
                SqlCommand com_searchAdmin = new SqlCommand("select * from Admins where adminid=@aid", con);
                com_searchAdmin.Parameters.AddWithValue("@aid", adminID);

                con.Open();
                SqlDataReader dr = com_searchAdmin.ExecuteReader();

                AdminModel ad = new AdminModel();
                if (dr.Read())
                {
                    ad.adminID = dr.GetInt32(0);
                    ad.adminName = dr.GetString(1);
                    ad.mobileNo = dr.GetString(2);
                    ad.adminEmailID = dr.GetString(3);
                    ad.adminStatus = dr.GetString(4);
                }
                // con.Close();
                return ad;
            }
            finally
            {
                con.Close();
            }

        }

        public string AddScrollerImage(AddScrollerImageModel model)
        {
            try
            { 
            SqlCommand com_checkExistence = new SqlCommand("select count(*) from ScrollerImage where Position=@pos", con);
            com_checkExistence.Parameters.AddWithValue("@pos", model.Position);
            con.Open();
            int flag = Convert.ToInt32(com_checkExistence.ExecuteScalar());

            if (flag > 0)
            {

                SqlCommand com_getImageid = new SqlCommand("select ScrImageID from ScrollerImage where Position=@pos", con);
                com_getImageid.Parameters.AddWithValue("@pos", model.Position);
                model.ScrlImageID = Convert.ToInt32(com_getImageid.ExecuteScalar());

                model.ImageAddress = "/ScrollerImages/" + model.ScrlImageID.ToString() + Path.GetExtension(model.file.FileName);

                SqlCommand com_updateimage = new SqlCommand("update ScrollerImage set ImageHeader=@header,ImageDescription=@Desc,ImageAddress=@i where Position=@pos", con);
                com_updateimage.Parameters.AddWithValue("@header", model.ImageHeader);
                com_updateimage.Parameters.AddWithValue("@Desc", model.ImageDesc);
                com_updateimage.Parameters.AddWithValue("@i", model.ImageAddress);
                com_updateimage.Parameters.AddWithValue("@pos", model.Position);
                int i = com_updateimage.ExecuteNonQuery();
                if (i == 1)
                {
                    return model.ScrlImageID.ToString() + Path.GetExtension(model.file.FileName);
                }
                else
                {
                    return "false";
                }

            }
            else
            {
                SqlCommand com_AddScrlImg = new SqlCommand("insert ScrollerImage values(@header,@Desc,'',@pos)", con);
                com_AddScrlImg.Parameters.AddWithValue("@header", model.ImageHeader);
                com_AddScrlImg.Parameters.AddWithValue("@Desc", model.ImageDesc);
                com_AddScrlImg.Parameters.AddWithValue("@pos", model.Position);

                com_AddScrlImg.ExecuteNonQuery();

                SqlCommand com_GetImageId = new SqlCommand("select @@identity", con);
                model.ScrlImageID = Convert.ToInt32(com_GetImageId.ExecuteScalar());

                model.ImageAddress = "/ScrollerImages/" + model.ScrlImageID.ToString() + Path.GetExtension(model.file.FileName);

                SqlCommand com_updateimage = new SqlCommand("update ScrollerImage set ImageAddress=@i where ScrImageID=@id", con);
                com_updateimage.Parameters.AddWithValue("@i", model.ImageAddress);
                com_updateimage.Parameters.AddWithValue("@id", model.ScrlImageID);
                int i = com_updateimage.ExecuteNonQuery();
                if (i == 1)
                {
                    return model.ScrlImageID.ToString() + Path.GetExtension(model.file.FileName);
                }
                else
                {
                    return "false";
                }
            }
            }
            finally
            {
                con.Close();
            }

        }


        public bool UploadNews(AllNewsTableModel model)
        {
            try
            { 
            if(model.Section2Description==null)
            {
                model.Section2Description="";
            }
            if(model.Section3Description==null)
            {
                model.Section3Description="";
            }
            if (model.MarqueeNewsID == 0)
            {
                model.MarqueeNewsID = 1000;
            }
            if (model.ScrImageID == 0)
            {
                model.ScrImageID = 10000;
            }
            SqlCommand com_UploadNews = new SqlCommand("insert AllNewstable values(@newsid,@title,@cat,@sec1,@sec2,@sec3,'Yes',@ispopular,@priority,@mid,@date,@scrid)", con);
            com_UploadNews.Parameters.AddWithValue("@newsid",model.NewsID);
            com_UploadNews.Parameters.AddWithValue("@title",model.NewsTitle);
            com_UploadNews.Parameters.AddWithValue("@cat",model.category);
            com_UploadNews.Parameters.AddWithValue("@sec1",model.Section1Description);
            com_UploadNews.Parameters.AddWithValue("@sec2",model.Section2Description);
            com_UploadNews.Parameters.AddWithValue("@sec3",model.Section3Description);
            //com_UploadNews.Parameters.AddWithValue("@islatest",model.IsLatest);
            com_UploadNews.Parameters.AddWithValue("@ispopular",model.IsPopular);
            com_UploadNews.Parameters.AddWithValue("@priority",model.PriorityOfNews);
            com_UploadNews.Parameters.AddWithValue("@mid", model.MarqueeNewsID);
            com_UploadNews.Parameters.AddWithValue("@date",model.NewsDate);
            com_UploadNews.Parameters.AddWithValue("@scrid", model.ScrImageID);
            con.Open();
            int i = com_UploadNews.ExecuteNonQuery();
            if(i==1)
            {
                model.Section1ImageString = "/NewsImages/" + model.NewsID + "_1" + Path.GetExtension(model.Section1ImageFile.FileName);
                SqlCommand com_addsec1image = new SqlCommand("insert NewsPhoto values(@id,1,@iadd)", con);
                com_addsec1image.Parameters.AddWithValue("@id",model.NewsID);
                com_addsec1image.Parameters.AddWithValue("@iadd", model.Section1ImageString);
                int i1 = com_addsec1image.ExecuteNonQuery();
                if(model.Section2ImageFile!=null)
                {
                    model.Section2ImageString = "/NewsImages/" + model.NewsID + "_2" + Path.GetExtension(model.Section2ImageFile.FileName);
                    SqlCommand com_addsec2image = new SqlCommand("insert NewsPhoto values(@id,2,@iadd)", con);
                    com_addsec2image.Parameters.AddWithValue("@id", model.NewsID);
                    com_addsec2image.Parameters.AddWithValue("@iadd", model.Section2ImageString);
                    int i2 = com_addsec2image.ExecuteNonQuery();
                }

                if (model.Section3ImageFile != null)
                {
                    model.Section3ImageString = "/NewsImages/" + model.NewsID + "_3" + Path.GetExtension(model.Section3ImageFile.FileName);
                    SqlCommand com_addsec3image = new SqlCommand("insert NewsPhoto values(@id,3,@iadd)", con);
                    com_addsec3image.Parameters.AddWithValue("@id", model.NewsID);
                    com_addsec3image.Parameters.AddWithValue("@iadd", model.Section3ImageString);
                    int i3 = com_addsec3image.ExecuteNonQuery();
                }
                 return true;
            }
            return false;

            }
            finally
            {
                con.Close();
            }
        }

        public List<AllNewsTableModel> getAllNewsforTable()
        {
            try
            { 
            SqlCommand com_getAllNews = new SqlCommand("select NewsID,NewsTitle,Category,IsLatest,IsPopular,PriorityOfNews from AllNewstable order by NewsDate desc", con);
            con.Open();
            SqlDataReader dr = com_getAllNews.ExecuteReader();
            List<AllNewsTableModel> obj = new List<AllNewsTableModel>();
            while(dr.Read())
            {
                AllNewsTableModel model = new AllNewsTableModel();
                model.NewsID = dr.GetString(0);
                model.NewsTitle = dr.GetString(1);
                model.category = dr.GetString(2);
                model.IsLatest = dr.GetString(3);
                model.IsPopular = dr.GetString(4);
                model.PriorityOfNews = dr.GetString(5);
                obj.Add(model);
            }
            //con.Close();
            return obj;
            }
            finally
            {
                con.Close();
            }
        }

        public bool UpdateNews(AllNewsTableModel model)
        {
            try
            { 
            if (model.Section2Description == null)
            {
                model.Section2Description = "";
            }
            if (model.Section3Description == null)
            {
                model.Section3Description = "";
            }
            //if (model.MarqueeNewsID == 0)
            //{
            //    model.MarqueeNewsID = 1000;
            //}
            if (model.Section2ImageFile == null)
            {
                model.Section2ImageString = "";
            }
            if (model.Section3ImageFile == null)
            {
                model.Section3ImageString = "";
            }


            SqlCommand com_updatenews = new SqlCommand("update AllNewstable set NewsTitle=@title,Category=@cat,Section1Description=@sec1,Section2Description=@sec2,Section3Description=@sec3,IsLatest=@islatest,IsPopular=@ispopular,PriorityOfNews=@priority,NewsDate=@date where NewsID=@newsid", con);
            com_updatenews.Parameters.AddWithValue("@newsid", model.NewsID);
            com_updatenews.Parameters.AddWithValue("@title", model.NewsTitle);
            com_updatenews.Parameters.AddWithValue("@cat", model.category);
            com_updatenews.Parameters.AddWithValue("@sec1", model.Section1Description);
            com_updatenews.Parameters.AddWithValue("@sec2", model.Section2Description);
            com_updatenews.Parameters.AddWithValue("@sec3", model.Section3Description);
            com_updatenews.Parameters.AddWithValue("@islatest", model.IsLatest);
            com_updatenews.Parameters.AddWithValue("@ispopular", model.IsPopular);
            com_updatenews.Parameters.AddWithValue("@priority", model.PriorityOfNews);
            //com_updatenews.Parameters.AddWithValue("@mid", model.MarqueeNewsID);
            com_updatenews.Parameters.AddWithValue("@date", model.NewsDate);
            con.Open();
            int i = com_updatenews.ExecuteNonQuery();
            con.Close();
            if(i==1)
            {
                model.Section1ImageString = "/NewsImages/" + model.NewsID + "_1" + Path.GetExtension(model.Section1ImageFile.FileName);
                SqlCommand com_addsec1image = new SqlCommand("update NewsPhoto set ImageAddress=@iadd where NewsID=@id and Section=1", con);
                com_addsec1image.Parameters.AddWithValue("@id", model.NewsID);
                com_addsec1image.Parameters.AddWithValue("@iadd", model.Section1ImageString);
                con.Open();
                int i1 = com_addsec1image.ExecuteNonQuery();
                con.Close();
                if (model.Section2ImageFile != null)
                {
                    model.Section2ImageString = "/NewsImages/" + model.NewsID + "_2" + Path.GetExtension(model.Section2ImageFile.FileName);
                }
                if(checkImage(model.NewsID,2))
                {
                    SqlCommand com_addsec2image = new SqlCommand("update NewsPhoto set ImageAddress=@iadd where NewsID=@id and Section=2", con);
                    com_addsec2image.Parameters.AddWithValue("@id", model.NewsID);
                    com_addsec2image.Parameters.AddWithValue("@iadd", model.Section2ImageString);
                    con.Open();
                    int i2 = com_addsec2image.ExecuteNonQuery();
                    con.Close();
                }
                else
                {
                    if (model.Section2ImageFile != null)
                    {
                        SqlCommand com_addsec2image = new SqlCommand("insert NewsPhoto values(@id,2,@iadd)", con);
                        com_addsec2image.Parameters.AddWithValue("@id", model.NewsID);
                        com_addsec2image.Parameters.AddWithValue("@iadd", model.Section2ImageString);
                        con.Open();                     
                        int i2 = com_addsec2image.ExecuteNonQuery();
                        con.Close();
                    }
                }
                    
                

                if (model.Section3ImageFile != null)
                {
                    model.Section3ImageString = "/NewsImages/" + model.NewsID + "_3" + Path.GetExtension(model.Section3ImageFile.FileName);
                }
                if (checkImage(model.NewsID, 3))
                {
                    SqlCommand com_addsec3image = new SqlCommand("update NewsPhoto set ImageAddress=@iadd where NewsID=@id and Section=3", con);
                    com_addsec3image.Parameters.AddWithValue("@id", model.NewsID);
                    com_addsec3image.Parameters.AddWithValue("@iadd", model.Section3ImageString);
                    con.Open();
                    int i3 = com_addsec3image.ExecuteNonQuery();
                    con.Close();
                }
                else
                {
                    if (model.Section3ImageFile != null)
                    {
                        SqlCommand com_addsec2image = new SqlCommand("insert NewsPhoto values(@id,3,@iadd)", con);
                        com_addsec2image.Parameters.AddWithValue("@id", model.NewsID);
                        com_addsec2image.Parameters.AddWithValue("@iadd", model.Section2ImageString);
                        con.Open();
                        int i2 = com_addsec2image.ExecuteNonQuery();
                        con.Close();
                    }
                }

                //con.Close();
                return true;
            }
            return false;
            }
            finally
            {
                con.Close();
            }
        }



        /// <summary>
        /// ////////////////////////////////////News Video Upload ////////////////////////////////
        /// </summary>
        /// <returns></returns>
        public bool newesVideoUpload(NewsVideoModel model)
        {
            try
            { 
            SqlCommand com_vidUpload = new SqlCommand("insert NewsVideo values(@nid,@sec,@iframe)", con);
            com_vidUpload.Parameters.AddWithValue("@nid", model.NewsID);
            com_vidUpload.Parameters.AddWithValue("@sec", model.Section);
            com_vidUpload.Parameters.AddWithValue("@iframe", model.IFrameAddress);
            con.Open();
            int c = com_vidUpload.ExecuteNonQuery();
           // con.Close();
            if (c == 1)
            {
                return true;
            }
            return false;
            }
            finally
            {
                con.Close();
            }
        }





        public AllNewsTableModel getBriefNews(string id)
        {
            try
            { 
            SqlCommand com_getBriefNews = new SqlCommand("select * from AllNewstable where newsid=@id", con);
            com_getBriefNews.Parameters.AddWithValue("@id", id);
            con.Open();
            SqlDataReader dr = com_getBriefNews.ExecuteReader();
            AllNewsTableModel model = new AllNewsTableModel();
            while (dr.Read())
            {
                model.NewsID = dr.GetString(0);
                model.NewsTitle = dr.GetString(1);
                model.category = dr.GetString(2);
                model.Section1Description = dr.GetString(3);
                model.Section2Description = dr.GetString(4);
                model.Section3Description = dr.GetString(5);
                model.IsLatest = dr.GetString(6);
                model.IsPopular = dr.GetString(7);
                model.PriorityOfNews = dr.GetString(8);
                //model.MarqueeNewsID=dr.GetInt32()
                model.NewsDate = dr.GetDateTime(10).ToShortDateString();
            }
            con.Close();

            SqlCommand com_getImgAddress1 = new SqlCommand("select ImageAddress from NewsPhoto where newsid=@id and section=1", con);
            com_getImgAddress1.Parameters.AddWithValue("@id", id);
            con.Open();
            model.Section1ImageString = com_getImgAddress1.ExecuteScalar().ToString();
            
            con.Close();

            SqlCommand com_getImgAddress2 = new SqlCommand("select ImageAddress from NewsPhoto where newsid=@id and section=2", con);
            com_getImgAddress2.Parameters.AddWithValue("@id", id);
            con.Open();
            object temp = com_getImgAddress2.ExecuteScalar();
            if (temp != null)
            {
                model.Section2ImageString = temp.ToString();
            }
            con.Close();

            SqlCommand com_getImgAddress3 = new SqlCommand("select ImageAddress from NewsPhoto where newsid=@id and section=3", con);
            com_getImgAddress3.Parameters.AddWithValue("@id", id);
            con.Open();
            object temp1 = com_getImgAddress3.ExecuteScalar();
            if (temp1 != null)
            {
                model.Section3ImageString = temp.ToString();
            }
            con.Close();

            return model;
            }
            finally
            {
                con.Close();
            }
        }


        private bool checkImage(string id, int sec)
        {
            try
            { 
            SqlCommand com_checkImage = new SqlCommand("select count(*) from NewsPhoto where NewsID=@id and Section=@sec", con);
            com_checkImage.Parameters.AddWithValue("@id", id);
            com_checkImage.Parameters.AddWithValue("@sec", sec);
            con.Open();
                int i =Convert.ToInt32(com_checkImage.ExecuteScalar());
            if(i==1)
            {
                return true;
            }
            else
            {
                return false;
            }
            }
            finally
            {
                con.Close();
            }

        }



        ///////////////Atanu 12//////////////
        public List<AddScrollerImageModel> GetScrollerImage()
        {
            try
            { 
            SqlCommand com_GetScrlImg = new SqlCommand("select * from ScrollerImage order by Position", con);
            con.Open();
            SqlDataReader dr = com_GetScrlImg.ExecuteReader();
            List<AddScrollerImageModel> obj = new List<AddScrollerImageModel>();
            while (dr.Read())
            {
                AddScrollerImageModel model = new AddScrollerImageModel();
                model.ScrlImageID = dr.GetInt32(0);
                model.ImageHeader = dr.GetString(1);
                model.ImageDesc = dr.GetString(2);
                model.ImageAddress = dr.GetString(3);
                model.Position = dr.GetInt32(4);
                if(model.ScrlImageID!=10000)
                obj.Add(model);
            }
           // con.Close();
            return obj;
            }
            finally
            {
                con.Close();
            }
        }




        /// <summary>
        /// ////////////////////////////////////////////////gallery
        /// </summary>
        /// <param name="g_model"></param>
        /// <returns></returns>
        public string AddGalleryImage(PhotoGalleryModel model)
        {
            try
            { 
            SqlCommand com_checkExistence = new SqlCommand("select count(*) from Gallery where Position=@pos", con);
            com_checkExistence.Parameters.AddWithValue("@pos", model.Position);
            con.Open();
            int flag = Convert.ToInt32(com_checkExistence.ExecuteScalar());

            if (flag > 0)
            {

                SqlCommand com_getImageid = new SqlCommand("select ImageID from Gallery where Position=@pos", con);
                com_getImageid.Parameters.AddWithValue("@pos", model.Position);
                model.imageID = Convert.ToInt32(com_getImageid.ExecuteScalar());

                model.ImageAddress = "/Gallery/" + model.imageID.ToString() + Path.GetExtension(model.file.FileName);

                SqlCommand com_updateimage = new SqlCommand("update Gallery set ImageTitle=@header,ImageAddress=@i where Position=@pos", con);
                com_updateimage.Parameters.AddWithValue("@header", model.ImageTitle);
                com_updateimage.Parameters.AddWithValue("@i", model.ImageAddress);
                com_updateimage.Parameters.AddWithValue("@pos", model.Position);
                int i = com_updateimage.ExecuteNonQuery();
                if (i == 1)
                {
                    return model.imageID.ToString() + Path.GetExtension(model.file.FileName);
                }
                else
                {
                    return "false";
                }

            }
            else
            {
                SqlCommand com_AddScrlImg = new SqlCommand("insert Gallery values(@Title,'',@pos)", con);
                com_AddScrlImg.Parameters.AddWithValue("@Title", model.ImageTitle);
                com_AddScrlImg.Parameters.AddWithValue("@pos", model.Position);

                com_AddScrlImg.ExecuteNonQuery();

                SqlCommand com_GetImageId = new SqlCommand("select @@identity", con);
                model.imageID = Convert.ToInt32(com_GetImageId.ExecuteScalar());

                model.ImageAddress = "/Gallery/" + model.imageID.ToString() + Path.GetExtension(model.file.FileName);

                SqlCommand com_updateimage = new SqlCommand("update Gallery set ImageAddress=@i where ImageID=@id", con);
                com_updateimage.Parameters.AddWithValue("@i", model.ImageAddress);
                com_updateimage.Parameters.AddWithValue("@id", model.imageID);
                int i = com_updateimage.ExecuteNonQuery();
                if (i == 1)
                {
                    return model.imageID.ToString() + Path.GetExtension(model.file.FileName);
                }
                else
                {
                    return "false";
                }
            }
            }
            finally
            {
                con.Close();
            }

        }





        //////////////////////////// souvik 16/12//////////////////////////////////////////
        public List<AddFeedBackModel> showAllFeedback()
        {
            try
            {
                SqlCommand com_showFeedback = new SqlCommand("select * from feedback order by feedbackID desc", con);
                con.Open();
                SqlDataReader dr = com_showFeedback.ExecuteReader();
                List<AddFeedBackModel> list_feed = new List<AddFeedBackModel>();
                while (dr.Read())
                {
                    AddFeedBackModel model = new AddFeedBackModel();
                    model.FeedbackID = dr.GetInt32(0);
                    model.Name = dr.GetString(1);
                    model.contactNumber = dr.GetString(2);
                    model.Message = dr.GetString(3);
                    model.feedbackStatus = dr.GetString(4);
                    list_feed.Add(model);
                }

                // con.Close();
                return list_feed;
            }
            finally
            {
                con.Close();
            }
        }




        ///deleting NewsData//////////////
        public bool DeeleteNewsByID(string id)
        {
            try
            { 
            SqlCommand com_delPhotocorr = new SqlCommand("delete NewsPhoto where NewsID=@id", con);
            com_delPhotocorr.Parameters.AddWithValue("@id", id);
            con.Open();
            int i = com_delPhotocorr.ExecuteNonQuery();
            if (i > 0)
            {
                i = 0;
                SqlCommand com_delVideocorr = new SqlCommand("delete NewsVideo where NewsID=@id", con);
                com_delVideocorr.Parameters.AddWithValue("@id", id);
                com_delVideocorr.ExecuteNonQuery();
                SqlCommand com_getReffIDs = new SqlCommand("select MarqueeNewsID,ScrImageID from AllNewstable where NewsID=@id", con);
                com_getReffIDs.Parameters.AddWithValue("@id", id);
                SqlDataReader dr = com_getReffIDs.ExecuteReader();
                int mID = 0;
                int sID = 0;
                if (dr.Read())
                {
                    if (dr.GetInt32(0) != 1000)
                        mID = dr.GetInt32(0);
                    if (dr.GetInt32(1) != 10000)
                        sID = dr.GetInt32(1);
                }
                con.Close();
                SqlCommand com_delNewsByID = new SqlCommand("delete AllNewstable where NewsID=@id", con);
                com_delNewsByID.Parameters.AddWithValue("@id", id);
                con.Open();
                i = com_delNewsByID.ExecuteNonQuery();
                if (i == 1)
                {
                    SqlCommand com_delScrImg = new SqlCommand("delete ScrollerImage where ScrImageID=@id", con);
                    com_delScrImg.Parameters.AddWithValue("@id", sID);

                    com_delScrImg.ExecuteNonQuery();

                    SqlCommand com_delMarquee = new SqlCommand("delete MarqueeNews where MarqueeNewsID=@id", con);
                    com_delMarquee.Parameters.AddWithValue("@id", mID);
                    com_delMarquee.ExecuteNonQuery();
                    con.Close();
                    return true;
                }

            }


            con.Close();
            return false;
            }
            finally
            {
                con.Close();
            }
        }



        public bool DeleteFeedbackById(int id)
        {
            try
            { 
            SqlCommand com_delFeedback = new SqlCommand("delete Feedback where feedbackid=@id", con);
            com_delFeedback.Parameters.AddWithValue("@id", id);
            con.Open();
            int flag = com_delFeedback.ExecuteNonQuery();
            if (flag == 1)
            {
               // con.Close();
                return true;
            }
            else
            {
               // con.Close();
                return false;
            }
            }
            finally
            {
                con.Close();
            }

        }


        public bool invisibleFeedback(int feedbackID)
        {
            try
            {
                SqlCommand com_inv = new SqlCommand("update Feedback set feedbackStatus='Invisible' where feedbackid=@fid", con);
                com_inv.Parameters.AddWithValue("@fid", feedbackID);
                con.Open();
                int count = com_inv.ExecuteNonQuery();
                //con.Close();

                if (count == 1)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            finally
            {
                con.Close();
            }
        }



        public bool visibleFeedback(int feedbackID)
        {
            try
            {
                SqlCommand com_inv = new SqlCommand("update Feedback set feedbackStatus='Visible' where feedbackid=@fid", con);
                com_inv.Parameters.AddWithValue("@fid", feedbackID);
                con.Open();
                int count = com_inv.ExecuteNonQuery();
                //  con.Close();

                if (count == 1)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            finally
            {
                con.Close();
            }
        }




        public bool forgetPasswordToEmail(ForgetPasswordToEmailModel model)
        {
            try
            {
                SqlCommand com_getEmail = new SqlCommand("select AdminEmail from admins where adminID=@aid", con);
                com_getEmail.Parameters.AddWithValue("@aid", model.adminID);

                con.Open();
                Object abc = com_getEmail.ExecuteScalar();
                string email = null;
                if(abc!=null)
                {
                    email = abc.ToString();
                }
                else
                {
                    return false;
                }
                

                //if (email == null)
                //{
                //    return false;
                //}

                string newPassword = System.Web.Security.Membership.GeneratePassword(8, 3).ToUpper();

                MembershipUser usr = Membership.GetUser(model.adminID.ToString());
                string resetPwd = usr.ResetPassword();
                usr.ChangePassword(resetPwd, newPassword);


                //return email+" "+newPassword;


                var senderEmail = new MailAddress("developers.clinic@gmail.com", "Developers");
                var receiverEmail = new MailAddress(email, "User");

                var fromPassword = "AtaSouSub@123";
                var subject = "Reset Password";
                var body = "Your new password is -  " + newPassword + "\n Please reset your password";

                var smtp = new SmtpClient
                {
                    Host = "smtp.gmail.com",
                    Port = 587,
                    EnableSsl = true,
                    DeliveryMethod = SmtpDeliveryMethod.Network,
                    UseDefaultCredentials = false,
                    Credentials = new NetworkCredential(senderEmail.Address, fromPassword)
                };

                using (var message = new MailMessage(senderEmail, receiverEmail)
                {
                    Subject = subject,
                    Body = body

                })
                {
                    smtp.Send(message);
                }


                return true;

            }
            finally
            {
                con.Close();
            }


        }


        public bool linkMarqueeToScroller(int marID, int scrID)
        {
            try
            { 
            SqlCommand com_link = new SqlCommand("update AllNewsTable set ScrImageID=@sid where MarqueeNewsID=@mid", con);
            com_link.Parameters.AddWithValue("@sid",scrID);
            com_link.Parameters.AddWithValue("@mid",marID);

            con.Open();
            int i = com_link.ExecuteNonQuery();
            if (i == 1)
                return true;
            else
                return false;
            }
            finally
            {
                con.Close();
            }
        }


        /// <summary>
        /// ////////////////////vik 21 12
        /// </summary>
        /// <returns></returns>
        public List<NewsPaperPageModel> getAllNewsPaperPage()
        {
            try
            {
                SqlCommand com_GetScrlImg = new SqlCommand("select * from NewsPaperPage order by PageNumber asc", con);
                con.Open();
                SqlDataReader dr = com_GetScrlImg.ExecuteReader();
                List<NewsPaperPageModel> obj = new List<NewsPaperPageModel>();
                while (dr.Read())
                {
                    NewsPaperPageModel model = new NewsPaperPageModel();
                    model.PaperImageID = dr.GetInt32(0);
                    model.ImageAddress = dr.GetString(1);
                    model.PageNumber = dr.GetInt32(2);
                    obj.Add(model);
                }
                // con.Close();
                return obj;
            }
            finally
            {
                con.Close();
            }
        }





        public bool deleteNewsPage(int pageNo)
        {
            try
            {
                SqlCommand com_delpage = new SqlCommand("delete NewsPaperPage where PageNumber=@id", con);
                com_delpage.Parameters.AddWithValue("@id", pageNo);
                con.Open();
                int flag = com_delpage.ExecuteNonQuery();
                if (flag == 1)
                {
                    // con.Close();
                    return true;
                }
                else
                {
                    // con.Close();
                    return false;
                }
            }
            finally
            {
                con.Close();
            }

        }


        ///atanu
        ///
        public string AddNewsPaperImage(NewsPaperPageModel model)
        {
            try
            {
                SqlCommand com_checkexistence = new SqlCommand("select PaperImageID from NewsPaperPage where PageNumber=@no", con);
                com_checkexistence.Parameters.AddWithValue("@no", model.PageNumber);
                con.Open();
                model.PaperImageID = Convert.ToInt32(com_checkexistence.ExecuteScalar());
                if (model.PaperImageID == 0)
                {
                    SqlCommand com_AddNewsPaperImage = new SqlCommand("insert NewsPaperPage values('',@pno)", con);
                    com_AddNewsPaperImage.Parameters.AddWithValue("@pno", model.PageNumber);
                    int i = com_AddNewsPaperImage.ExecuteNonQuery();
                    if (i == 1)
                    {

                        SqlCommand com_ID = new SqlCommand("select @@identity", con);
                        model.PaperImageID = Convert.ToInt32(com_ID.ExecuteScalar());

                        model.ImageAddress = "/NewsPaperPage/" + model.PaperImageID + Path.GetExtension(model.file.FileName);
                        SqlCommand com_addNewsImage = new SqlCommand("update NewsPaperPage set ImageAddress=@iadd where PaperImageID=@id ", con);
                        com_addNewsImage.Parameters.AddWithValue("@id", model.PaperImageID);
                        com_addNewsImage.Parameters.AddWithValue("@iadd", model.ImageAddress);
                        int i2 = com_addNewsImage.ExecuteNonQuery();
                        return model.PaperImageID + Path.GetExtension(model.file.FileName);
                    }
                }
                else
                {
                    model.ImageAddress = "/NewsPaperPage/" + model.PaperImageID + Path.GetExtension(model.file.FileName);
                    SqlCommand com_addNewsImage = new SqlCommand("update NewsPaperPage set ImageAddress=@iadd where PaperImageID=@id ", con);
                    com_addNewsImage.Parameters.AddWithValue("@id", model.PaperImageID);
                    com_addNewsImage.Parameters.AddWithValue("@iadd", model.ImageAddress);
                    int i2 = com_addNewsImage.ExecuteNonQuery();
                    return model.PaperImageID + Path.GetExtension(model.file.FileName);
                }

                return "false";

            }
            finally
            {
                con.Close();
            }
        }




        public bool updateAdminProfile(AdminModel model)
        {
            try
            {
            SqlCommand com_updateAdmin = new SqlCommand("update Admins set AdminName=@name, AdminMbl=@mbl, AdminEmail=@email, AdminStatus=@st where adminID =@id ", con);
                com_updateAdmin.Parameters.AddWithValue("@name", model.adminName);
                com_updateAdmin.Parameters.AddWithValue("@mbl", model.mobileNo);
                com_updateAdmin.Parameters.AddWithValue("@email", model.adminEmailID);
                com_updateAdmin.Parameters.AddWithValue("@st", model.adminStatus);
                com_updateAdmin.Parameters.AddWithValue("@id", model.adminID);

                con.Open();
                if (com_updateAdmin.ExecuteNonQuery() == 1)
                {
                    //con.Close();
                    return true;
                }
                else
                {
                    //con.Close();
                    return false; ;
                }
            }
            finally
            {
                con.Close();
            }

        }

        /// <summary>
        /// subha 25/12/2017
        /// </summary>
        /// <returns></returns>
        //public int GetScrlID(string id)
        //{
        //    SqlCommand com_getScrlID = new SqlCommand("Select ScrImageID from AllNewstable where NewsID=@id", con);
        //    com_getScrlID.Parameters.AddWithValue("@id", id);
        //    con.Open();
        //    int scrlID = Convert.ToInt32(com_getScrlID.ExecuteScalar());
        //    con.Close();
        //    if(scrlID!=10000){
        //        return scrlID;
        //    }
            
        //    return 0;
        //}
    }
}